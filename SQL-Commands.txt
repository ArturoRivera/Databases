EXERCISES

1. List the commands for adding, updating, and deleting data.
- INSERT INTO, UPDATE, DELETE



2. Explain the structure for each type of command.
- INSERT INTO tableName VALUES dataToBeInserted
- UPDATE tableName SET newdata WHERE uniqueIndentifiers
- DELETE FROM tableName WHERE uniqueIdentifiers



3. What are some of the data types that can be used in tables? Give a real-world example of each type.
- Numeric, date/time, & character/strings are some of the data types that can be used in tables. For numeric we 
could have the age of a certain user or the number of times a site has been visited. For the date/time, we could have
the user's date of birth or the last time the user logged on. For characters/strings, we can use a string to indicate
the breed of dog.



4. Decide how to create a new table to hold a list of people invited to a wedding dinner. The table needs to have first and last names, whether they sent in their RSVP, the number of guests they are bringing, and the number of meals (1 for adults and 1/2 for children).

Which data type would you use to store each of the following pieces of information?
First and last name.
- Strings

Whether they sent in their RSVP.
- Boolean

Number of guests.
- Integer

Number of meals.
- Float

Write a command that creates the table to track the wedding dinner.
- CREATE TABLE guestList (
      first_name string,
      last_name string,
      rsvp boolean,
      guests integer,
      meals float
  );

Write a command that adds a column to track whether the guest sent a thank you card.
- ALTER TABLE guestList ADD COLUMN sentCard boolean;

You have decided to move the data about the meals to another table, so write a command to remove the column storing the number meals from the wedding table.
- ALTER TABLE guestList DROP COLUMN meals;

The guests will need a place to sit at the reception, so write a command that adds a column for table number.
- ALTER TABLE guestList ADD COLUMN table_number integer;

The wedding is over and we do not need to keep this information, so write a command that deletes the table numbers from the database.
- ALTER TABLE guestList DROP COLUMN table_number;



5. Write a command to create a new table to hold the books in a library with the columns ISBN, title, author, genre, publishing date, number of copies, and available copies.
- CREATE TABLE library (
      ISBN numeric,
      title text,
      author text,
      genre text,
      publishing_date date,
      number_of_copies integer,
      available_copies integer
  );

Find three books and add their information to the table.
- INSERT INTO library (ISBN, title, author, genre, publishing_date, number_of_copies, available_copies)
      VALUES
      (652462724566, 'Green Eggs and Ham', 'Dr. Seuss', 'Children', 08/23/1987, 50, 28),
      (726819037267, '102 Minutes', 'Jim Dwyer', 'Biography', 09/1/2008, 20, 12),
      (982638228849, 'High Performance Habits', 'Self-Development', '03/14/2015', 12, 2)
      ;

Someone has just checked out one of the books. Change the number of available copies to 1 fewer.
- UPDATE library SET available_copies=27 WHERE ISBN=652462724566 AND title='Green Eggs and Ham';

Now one of the books has been added to the banned books list. Remove it from the table.
- DELETE FROM library WHERE ISBN=726819037267;



6. Write a command to make a new table to hold spacecrafts. Information should include id, name, year launched, country of origin, a brief description of the mission, orbiting body, if it is currently operating, and its approximate miles from Earth. 
- CREATE TABLE spacecrafts (
      id numeric,
      name text,
      year_launched numeric,
      country_of_origin text,
      mission text,
      orbiting_body text,
      operating boolean,
      miles_from_earth numeric
  );

In addition to the table creation, provide commands that perform the following operations:
Add three non-Earth-orbiting satellites to the table.
- INSERT INTO spacecrafts (id, name, year_launched, country_of_origin, mission, orbiting_body, operating, miles_from_earth)
    VALUES 
    (435, 'Space Dust', 2011, 'USA', 'Capturing images of black holes', 'Andromeda Galaxy', true, 128,433,452,123,432),
    (626, 'Nebula', 2016, 'USA', 'Searching for Thanos', 'Neptune', true, 838,232,432,,522),
    (128, 'Comet', 2019, 'Germany', 'Collecting data from Mars', 'Mars', true, 299,423,522,422)
    ;

Remove one of the satellites from the table since it has just crashed into the planet.
- DELETE FROM spacecrafts WHERE id=626; 

Edit another satellite because it is no longer operating and change the value to reflect that.
- UPDATE spacecrafts SET operating=false WHERE id=626;



7. Write a command to create a new table to hold the emails in your inbox. This table should include an id, the subject line, the sender, any additional recipients, the body of the email, the timestamp, whether or not you have read the email, and the id of the email chain its in. 
- CREATE TABLE emails (
        id numeric,
        subject text,
        sender text,
        other_recipients text,
        body text,
        timestamp timestamp,
        read boolean,
        email_chain numeric
);

Also provide commands that perform the following operations:
Add three new emails to the inbox.
- INSERT INTO emails (id, subject, sender, other_recipients, body, timestamp, read, email_chain)
        VALUES
        (87234, 'Dog', 'John Appleseed', 'none', 'Is this the dog you were looking for?', 09:23:34 11/23/2019, false, 92834),
        (89283, 'Job', 'Tim Cook', 'Bill Gates, 'Following up for that interview we had discussed', 07:38:12 10/1/2019, true, 23411),
        (89239, 'Smiling', 'Zendaya', 'none', 'Had a great time with you last night.' 10:32:32 02/15/20, false, 39942)
        ;

You deleted one of the emails, so write a command to remove the row from the inbox table.
- DELETE FROM emails WHERE id=87234;

You started reading an email but just heard a crash in another room. Mark the email as unread before investigating the crash, so you can come back and read it later.
- UPDATE emails SET read=false WHERE id=89283;





